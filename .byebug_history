c
current_user.followed_users
current-user.followed_users
current_user.follows
current_user.follows[0].author
current_user.follows
current_user.follows[0].author
current_user.follows[0].user
current_user.follows[0].users
current_user.follows
current_user.follows[0].authors
current_user.follows
current_user.follows.authors
current_user.follows
current_user.follows.includes(:author)[0].author.posts
current_user.follows.includes(:author)[0]
current_user.follows.includes(:author)[0].author.posts
current_user.follows.includes(:author)[0].author
current_user.follows.includes(:author)[0]
current_user.follows.includes(:author)[0].posts
current_user.follows.includes(:author)[0]
current_user.follows.includes(:author).includes(:posts)
current_user.follows.includes(:author).includes(posts)
current_user.follows.includes(:author).includes(:posts)
current_user.follows.includes(:author)
current_user.follows.includes(:author).author
current_user.follows.includes(:author)
current_user.follows.includes(:author).includes(:posts)
current_user.follows.includes(:author)
current_user.follows.includes(:author).count
current_user.follows.includes(:author)
current_user.follows.includes(:author).posts
current_user.follows.includes(:author)
Post.all
Post.includes(:user)
current_user.includes(:follows)
c
current_user.follows[0].author.posts
current_user.follows[0].author
current_user.follows
current_user
c
reload!
current_user.follows[0]
current_user.id
current_user
current_user.follows[0]
current_user.follows[0].follower
current_user.follows[0].user
current_user.follows[0]
current_user.follows
current_user.follows.follower
current_user.follows.user
current_user.follows
current_user
c
Follow
follow_params
c
params
follow_params
c
params
follow_params
c
follow_params
Follow
n
c
Follows
Follow
c
p
p.save
p.user_id = 2
p.user_id
p.errors.full_messages
p.save
p = Post.new(post_params)
Post.new(post_params)
post_params.image
post_params
c
git commit -m "can now make comments as the logged in user."
git add -A
c
@comment.user_id
@comment
current_user.id
current_user
current_user.id
comment_params
c
@postc
@post.user_id
@post
n
@post
current_user.id
current_user
c
@comment
c
post.comments
c
post.comments[0].user.username
post.comments[0].user
post.comments[0]
c
post.comments[0].content
post.comments.post_id
post.comments[content]
post.comments.id
post.comments.post_id
post.comments[content]
post.comments.post_id
post.comments
post.comments.content
post.comments
comments
comments.empty?
cc
c
cc
c
post.comments.empty?
post.comments.empty
post.comments.length
post.comments
n
c
post.comments
post
post.user
post
c
post.user.username
post.user
post.comments
post
c
post.comments
post
c
post
post.comments
c
post.comments
post
json
posts
c
@post.errors.full_messages
@post.save
@post
post_params
c
n
c
/Users/appacademy/Desktop/Instashare c
c
@post
n
post_params
c
params
post_params
c
json.posts
c
@user
c
params
c
n
c
json.array!.unshift(@user)
json.array!
json.array
json
json.user
@user
c
@posts
@post
c
@posts.unshift(@post)
@posts.unshift("hello")
@posts.class
@posts
c
post.user
c
post.user
json.user
c
post.user
json.user
c
post
post.user
c
JSON.parse(post.user.to_json)
post.user.to_json
post.user
post
c
User.find(post.user_id)c
User.find(post.user_id)
post.user_id
User.find(2)
post.user_id
post
json
c
n
q
c
post.created_at = (Time.now - post.created_at.time) / 60
post.created_at
post.created_at = (Time.now - post.created_at.time) / 60
post.created_at
(Time.now - post.created_at.time)
created_at
self
c
(Time.now - post.created_at.time)
Time.now - post.created_at.time
(Time.now - post.created_at.time)
Time.now - post.created_at.time
Time.now
Time.now - post.created_at.time.class
post.created_at.time
post.created_at.time.class
post.created_at.time
Time.now.class
Time.now
post.created_at.class
post.created_at
c
user
c
params
c
User.find_by(params[4])
User.find_by(params[:userId])
User.find)by(params[:userId])
params[:userId]
params
c
rake routes
c
paramsc
params
c
user
