c
s
n
s
n
result.class
result
c
@search_results
c
PgSearch.multisearch(params[:query]).includes(:searchable)
PgSearch.multisearch(params[:query])
params
c
@like
c
Like.find_by(user_id: current_user.id, post_id: params[:like][:post_id])
Like.find_by(:user_id: current_user.id)
Like.find_by(:user_id: current_user.id, post_id: params[:like][:post_id])
Like.find(1)
self.params
this
c
current_user.likes_post?(post.id)
c
current_user.likes_post?(post.id)
c
current_user.likes_post?(post)c
current_user.likes_post?(post)
current_user.likes_post?
current_user
current_user.likes_post?(post)
c
p.user_likes.where("user_id = ?", current_user.id).length == 1
p.user_likes.where("user_id = ?", current_user.id).length
p.user_likes.where("user_id = ?", current_user.id)
p.user_likes.where("user_id = 2")
p.user_likes.where("user_id = 1")
p.user_likes.where("")
p.user_likes.includes(current_user)
p.user_likes
current_user
p.user_likes.includes(current_user)
p.user_likes
p.user_likes.length
p.user_likes
p = Post.last
p.user_likes
c
reload!
p.user_likes
p.likes
p.likes.users
current_user.likes
User.likes
p.likes
p = Post.last
Post.last
p.likes
p
p = Post.find(2)
Post.find(2)
_
Post.find(2)
Like.find(2)
current_user.likes
post
current_user
user.likes
post.likes
post
c
n
c
n
@like
n
like_params
c
params
like_params
c
n
@user
n
list
params
c
n
@post.location
c
post.location
post.location.place
post.location
post
mpost
c
jjc
c
n
params[:id]
c
Location.find(params[:id]).posts
Location.find(params[:id])
c
n
c
Location.find(params[:id]).to_json
Location.find(params[:id])
params[:id]
c
n
c
p.save
p
p.location_id = 1
p = current_user.posts.last
current_user.posts.last.location_id
current_user.posts.last.location_id = 1
current_user.posts.last.location_id
urrent_user.posts.last.location_id
Location.find_by(place: @location.place).id
Location.find_by(place: @location.place)
@location
Location.find_by(place:
n
@location
n
@location
n
Post.all.last
c
n
c
current_user.posts.last.location_id
current_user.posts.last
current_user.posts
Post.last.location_id
Post.last.caption
Post.last.location_id
Post.last.image_id
Post.last
current_user
params[:location]
params
c
params[:location]
params[:location][0]
JSON.parse(params[:location])
json.parse(params[:location])
params[:location][0]
params[:location].0
params[:location]["0"]
params[:location][0]
params[:location]
params[:location][:long_name]
params[:location]
params
location
c
params[:location][:formatted_address]
params[:location].formatted_address
params[:location][:formatted_address]
params[:location]
params
location_params
c
params[:location]
params.location
params[:location]
c
params["location"]
params
c
params
c
Tag.find_by(tag_name: tag[1..-1]).id
Tag.find_by(tag_name: tag[1..-1])
Tag.find_by(tag_name: tag)
tag
n
tag
Post.last.destroy
c
tag
Tag.find_by(tag_name: tag[1..-1])
Tag.find_by(tag_name: tag)
tag
n
tag
c
Tagging
self.id
self
this
params
c
@tag.posts
@posts
c
cc
c
v
@user
n
c
n
params[:id]
params
c
n
c
git add -A
c
tags
c
tags
c
word
c
tagss
c
tagss
ntagss
c
n
word
c
tags
c
tags
word
n
word[0]
word
c
word[0] == 'h'
word[0]
word
c
n
s
self.caption.split.each do |word| end
self.caption.split.each do |word|
self.caption.split.each
self.comments.map
self.caption.split.class.map
self.caption.split.class.each
self.caption.split.class
self.caption
   13:     end
   12:       
self.caption.split.each do |word|
   13:     end
   12:       
self.caption.split.each do |word|
