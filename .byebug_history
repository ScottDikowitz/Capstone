c
@posts
current_user.is_following?(@user)
current_user
c
n
current_user
n
@user
current_user
reload!
c
Follow.where(["user_id = ? and follower_id = ?", 2, 1 ])[0]
Follow.all
Follow.where(["user_id = ? and follower_id = ?", 1, 2 ])[0]
this_user
current_user.id
Follow.all
@user
c
Follow.destroy_all
Follow.all
Follow
Follow.all
@user
c
@user[0]
@user.destroy
@user
c
Follow.where(["user_id = ? and follower_id = ?", 1, 2 ])
Follow.where('user_id' == 1, 'follower_id' == 2)
Follow.select('user_id' == 1)
Follow.select('user_id' == 1, 'follower_id' == 2)
Follow.where('user_id' == 1, 'follower_id' == 2)
Follow.all.length
Follow.all
Follow.where('user_id' == 1, 'follower_id' == 2).length
Follow.where('user_id' == 1, 'follower_id' == 2)
Follow.all
Follow.al
Follow.where("'user_id' == 1 AND 'follower_id' == 2")
Follow.where('user_id' == 1 AND 'follower_id' == 2)
Follow.where('user_id' == 1 AND follower_id == 2)
Follow.where('user_id' == 1).where('follower_id' == 2)
Follow.where('user_id' == 1).and('follower_id' == 2)
Follow.where('user_id' == 1)
Follow.where("'user_id' == 1")
Follow.where("user_id == '1'")
Follow.where("user_id == 1")
Follow.where("user_id == current_user.id")[0]
Follow.where("user_id == current_user.id")
Follow.where(user_id == current_user.id)
Follow.where("user_id == current_user.id")
Follow.where("user_id == current_user.id)
Follow.where(user_id === current_user.id)
Follow.find.where(user_id === current_user.id)
params[:follow]["follower_id"]
params[:follow][follower_id]
params[:follow].follower_id
params[:follower_id]
User.find(params["follower_id"])
params
self
c
current_user.followed_users
current_user
author
current_user.is_following?(author)
current_user
c
User.all.first.followed_users.include?(User.all.first)
User.all.first.followed_users.includes?(User.all.first)
User.all.first.followed_users
User.all.first
User.find_by(username: params[:id])
User.find(params[:id])
User.find(params[id])
params
self.params
self
c
current_user.followed_users
current-user.followed_users
current_user.follows
current_user.follows[0].author
current_user.follows
current_user.follows[0].author
current_user.follows[0].user
current_user.follows[0].users
current_user.follows
current_user.follows[0].authors
current_user.follows
current_user.follows.authors
current_user.follows
current_user.follows.includes(:author)[0].author.posts
current_user.follows.includes(:author)[0]
current_user.follows.includes(:author)[0].author.posts
current_user.follows.includes(:author)[0].author
current_user.follows.includes(:author)[0]
current_user.follows.includes(:author)[0].posts
current_user.follows.includes(:author)[0]
current_user.follows.includes(:author).includes(:posts)
current_user.follows.includes(:author).includes(posts)
current_user.follows.includes(:author).includes(:posts)
current_user.follows.includes(:author)
current_user.follows.includes(:author).author
current_user.follows.includes(:author)
current_user.follows.includes(:author).includes(:posts)
current_user.follows.includes(:author)
current_user.follows.includes(:author).count
current_user.follows.includes(:author)
current_user.follows.includes(:author).posts
current_user.follows.includes(:author)
Post.all
Post.includes(:user)
current_user.includes(:follows)
c
current_user.follows[0].author.posts
current_user.follows[0].author
current_user.follows
current_user
c
reload!
current_user.follows[0]
current_user.id
current_user
current_user.follows[0]
current_user.follows[0].follower
current_user.follows[0].user
current_user.follows[0]
current_user.follows
current_user.follows.follower
current_user.follows.user
current_user.follows
current_user
c
Follow
follow_params
c
params
follow_params
c
params
follow_params
c
follow_params
Follow
n
c
Follows
Follow
c
p
p.save
p.user_id = 2
p.user_id
p.errors.full_messages
p.save
p = Post.new(post_params)
Post.new(post_params)
post_params.image
post_params
c
git commit -m "can now make comments as the logged in user."
git add -A
c
@comment.user_id
@comment
current_user.id
current_user
current_user.id
comment_params
c
@postc
@post.user_id
@post
n
@post
current_user.id
current_user
c
@comment
c
post.comments
c
post.comments[0].user.username
post.comments[0].user
post.comments[0]
c
post.comments[0].content
post.comments.post_id
post.comments[content]
post.comments.id
post.comments.post_id
post.comments[content]
post.comments.post_id
post.comments
post.comments.content
post.comments
comments
comments.empty?
cc
c
cc
c
post.comments.empty?
post.comments.empty
post.comments.length
post.comments
n
c
post.comments
post
post.user
post
c
post.user.username
post.user
post.comments
post
c
post.comments
post
c
post
post.comments
c
post.comments
post
json
posts
c
@post.errors.full_messages
@post.save
@post
post_params
c
n
c
/Users/appacademy/Desktop/Instashare c
c
@post
n
post_params
c
params
post_params
c
json.posts
c
@user
c
params
c
n
